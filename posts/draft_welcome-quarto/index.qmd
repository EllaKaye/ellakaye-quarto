---
title: Welcome to my Quarto website!
description: |
  Resources and sites I found inspiring and useful when building my new site, notes on my customisations and plans for future posts
date: 2022-12-02
author: 
  - name: Ella Kaye
    url: https://fosstodon.org/@ellakaye
site-url: https://ellakaye.co.uk
#image: IMAGE.png
#image-alt: |
categories:
  - Quarto
  - distilltools
open-graph: true
twitter-card: true
# will inherit title, description, image
# to change ANYTHING about card, need to fill in EVERYTHING below
#  title: |
#  description: |
#  image: |
#  image-alt: |
#  defaults to 500 x 500 summary: uncomment lines below for large card
#  image-width: 600 
#  image-height: 314
#  card-style: summary_large_image 
#  image-width: 500
#  image-height: 500
#  card-style: summary
draft: true
---

<!--------------- set up ----------------->

```{r}
#| echo: false
#| results: 'hide'

long_slug <- "draft_welcome-quarto"

# NOTE: after finishing post, run renv::snapshot() and copy the renv.lock file 
# from the project root into the post directory
# renv::use(lockfile = "renv.lock")
```

<!--------------- post content ----------------->

Hello, and welcome to my new site, built using [Quarto](https://quarto.org){target="_blank"}. Here’s why I switched from {distill}, the resources and inspirations that helped me in the process. I also outline some of the customisations I made and set out plans for future blog posts.

## Why Quarto? Why now?

It doesn't seem all that long ago that I built a website using {distill} and announced it in a [post](../2021-05-08_welcome-distill/index.qmd) that this one will rather echo.

I was very happy with that site. Then Quarto was released and it quickly became clear that everything that I loved about working with {distill} was true of Quarto, and then some. As a keen user of a whole suite of packages in the R Markdown ecosystem, I could see the appeal of one consistent, coherent system to produce reports, presentations, books and websites. Moreover, Quarto is the natural successor to R Markdown, bringing with it a vast range of improvements, building on what RStudio/Posit learnt over a decade of developing the latter. When it was made clear that although Posit will maintain {distill}, all future improvements will be to Quarto, I knew it was only a matter of time before I rewrote my website once again, so thought I may as well get on with it.

I'm finding working with Quarto to be an absolute joy!

## Resources

This post is not a guide on how to get a Quarto website up and running. There are already great resources for that. Nor am I going to replicate the guidance on more advanced customisations that I found elsewhere since I can point you to the original sources. These are the resources that I found most helpful.

### The basics

- My first taste of Quarto was Mine Çetinkaya-Rundel's [talk](https://www.youtube.com/watch?v=6p4vOKS6Xls){target="_blank"} about it at the 2022 Toronto Workshop on Reproducibility.

- The official Quarto [tutorials](https://quarto.org/docs/get-started/){target="_blank"} got me going.

- The official Quarto [guide](https://quarto.org/docs/guide/){target="_blank"} is an absolute treasure trove with the section on [websites](https://quarto.org/docs/websites/) being, needless to say, most helpful for the development of this site.

When it comes to building websites, Quarto is a natural successor to {distill}. These two posts on making the transition were extremely helpful:

- Danielle Navarro on [porting a distill blog to Quarto](https://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto/){target="_blank"}. 

- Alison Hill's post [We don't talk about Quarto](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/){target="_blank"}.

### Going further

The above resources were enough for me to pretty much replicate the website I'd built with {distill}, but as I worked on it a couple of excellent blog posts were published that showed how much customisation was possible, which massively increased my ambitions for my new site:

- Albert Rapp's [ultimate guide to starting a Quarto blog ](https://albert-rapp.de/posts/13_quarto_blog_writing_guide/13_quarto_blog_writing_guide.html){target="_blank"}.

- Christian Gebhard's guide on [switching to Quarto](https://jollydata.blog/posts/2022-08-06-_switching-to-quarto/switching-to-quarto.html){target="_blank"}.

These two posts, in particular, gave me the inspiration and most of the know-how to create my custom home page. They also both contain helpful information on themes and styling.

## My customisations AKA how long could this possibly take?

The more I worked on the site, the more I wanted to tweak. In doing so, I learnt a lot, and I've managed, with help, to implement customisations that I haven't seen or read about elsewhere in relation to Quarto. Getting a basic Quarto site up is pretty easy (in fact, Tom Mock shows how it can be done in just [100 seconds](https://www.youtube.com/watch?v=t8qtcDyCRFA){target="_blank"}), but extensive customisation, particularly when starting with a pretty rudimentary knowledge of HTML and CSS, turned out to be pretty tricky. In this section, I'm going to list what I think are the cool features of this site, all of which I had to learn how to implement as I went along. Some of them are Quarto-specific. Others will be pretty standard to those with a more advanced knowledge of front-end web development, but I suspect will also be new to others who have come to website-building with Quarto from a backgroup in R programming rather than HTML/CSS/JS.

I am not, in this post, going to share how I achieved them. If I started on that, this post would get unwieldy and take me far too long to write. Instead, I'm just going to note what I had to learn to implement these features. I intend to spin each of the points below into separate tutorial-style blog posts over the next few months. If you're interested in seeing how I implemented things in the meantime, you can check out this site's [repo](https://github.com/EllaKaye/ellakaye.co.uk){target="_blank"}.

### Animated logo

My favourite feature of my website is the logo/home link in the top left corner, which is animated on hover.^[This works best on a laptop/desktop but there's a hint of it on a smartphone when the logo is pressed.] To implement this, I had to learn first how to create and style the static version using HTML and CSS and then how to apply the animation. I also had to figure out what HTML I could get away with using in `_quarto.yml` and the best place in the yaml to add the logo. There were also inconsistencies between browers to contend with. Along the way, I also learnt another strategy for using different logo images in light and dark modes. I was inspired to animate my logo by [Maya Gans](https://maya.rbind.io){target="_blank"}, who helped me a lot with the implementation.

### Animated navigation bar links and colours

Having animated my logo, I turned to adding an animation on hover to the rest of the links on the navigation bar and learnt more CSS in the process. It wasn't too tricky to find a solution for the animation itself online, but I found figuring out how to match the colours on hover and on the link for the active page to the colour of the corresponding card on the homepage tricky.

### CSS grid and bootstrap cards

Speaking of which, creating the custom layout of my homepage, using CSS grid and bootstrap cards, was a challenge. The blog posts by Albert and Christian linked to in the previous section got me a lot of the way there, but I still had to dive deep into the [boostrap documentation](https://getbootstrap.com/docs/5.0/getting-started/introduction/) to make sure the cards and the links inside them all lined up nicely.

### Light and dark mode

I put a *lot* of thought into the colour scheme for both the light and dark modes of the site, and making sure they complemented each other perfectly. For this, I built on what I'd learnt about [colour theory and accessibility when designing a custom syntax highlight scheme](../2021-05-26_custom-highlighting-distill-2/index.qmd) for my previous website. I also learnt about Sass and made extensive use of a lot of custom Sass variables.

### Giscus comments box light/dark toggle

Quarto makes it really easy to add [giscus](https://giscus.app){target="_blank"} comments boxes, and giscus (and in turn Quarto) make it pretty easy to select from a handful of different themes to style those boxes. There are a selection of light and dark themes, and one option to set light or dark dynamically based on your computer system setting. There was not, however, an obvious way of making the theme of the giscus box change responsively on toggling the light/dark mode for the site. In response to my query, with a lot of back and forth, Sage Abdullah, the creator of giscus, figured out the JavaScript to make this happen and I figured out how to integrate it into the Quarto site.

### Custom syntax highlighting

Having [implemented a custom syntax highlight theme](../2021-05-25_custom-highlighting-distill-1/index.qmd) for my {distill} site, and created a function for the [{distilltools}](../../packages/distilltools/index.qmd) package so others could do the same, I had hoped to be able to port that straight over to my Quarto site. Not quite. Although they are both called `arrow`, there are changes in the implementation of the default syntax highlight scheme for Quarto from how it was implemented in {distill}, and, to make things more awkward, there are also inconsistencies between the light and dark versions of `arrow` in Quarto. It took me a while to get my head around all that. It was quite finicky modifying my original highlighting theme and also creating a complementary theme for my dark mode.




### Icon links


- Getting the giscus comment box to toggle according to light/dark mode

### Local fonts and open type font features



[The Programmers' Credo](https://www.globalnerdy.com/2021/06/07/the-programmers-credo/) rings true:

> We do these things not because they are easy, but because we thought they were going to be easy.


<!--------------- appendices go here ----------------->

```{r appendix}
#| echo: false

source("../../R/appendix.R")
insert_appendix(
  repo_spec = "EllaKaye/ellakaye.co.uk", 
  name = long_slug
)
```

##### Session info {.appendix}

<details><summary>Toggle</summary>

```{r}
#| echo: false
library(sessioninfo)
# save the session info as an object
pkg_session <- session_info(pkgs = "attached")

# get the quarto version
quarto_version <- system("quarto --version", intern = TRUE)

# inject the quarto info
pkg_session$platform$quarto <- paste(
  system("quarto --version", intern = TRUE), 
  "@", 
  quarto::quarto_path()
  )

# print it out
pkg_session
```

</details>





